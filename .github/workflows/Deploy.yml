name: Build And Deploy üôè

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  ITCH_USERNAME: ${{ secrets.ITCH_USERNAME }}
  ITCH_GAME_ID: ${{ secrets.ITCH_GAME_ID }}

jobs:

  Upload_dev_beta:
    needs: buildWebGL
    name: Upload dev_beta to Itch
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    strategy:
      matrix:
        template: [WebGL]
        channel: [dev]

    steps:
      - uses: actions/cache@v2
        id: build-cache
        with:
          path: build/WebGL
          key: build-cache-${{ hashFiles('**/webgl.template.js') }}

      - uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.ITCH_IO_API_KEY }}
          gameData: ./build/${{ matrix.template }}
          itchUsername: ${{ env.ITCH_USERNAME }}
          itchGameId: ${{ env.ITCH_GAME_ID }}
          buildChannel: ${{ matrix.channel }}
          buildNumber: ${{ needs.version.outputs.version_hash }}

Upload_production:
    needs: buildWebGL
    name: Upload production to Itch
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        template: [WebGL]
        channel: [production]

    steps:
      - uses: actions/download-artifact@v2
       with:
         name: build-WebGL
         path: build

      - uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.ITCH_IO_API_KEY }}
          gameData: ./build/${{ matrix.template }}
          itchUsername: ${{ env.ITCH_USERNAME }}
          itchGameId: ${{ env.ITCH_GAME_ID }}
          buildChannel: ${{ matrix.channel }}
          buildNumber: ${{ needs.version.outputs.version_hash }}
